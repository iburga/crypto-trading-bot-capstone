name: Build and Test

on:
  workflow_call:
    # This makes it a reusable workflow

jobs:
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3
  #
  #   - name: Set up Python
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.11'
  #
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install flake8
  #
  #   - name: Run linter
  #     run: |
  #       flake8 src tests

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install pytest

      - name: Run tests
        run: |
          pytest tests/
  
  build:
    runs-on: ubuntu-latest
    outputs:
      build-id: ${{ steps.set-build-id.outputs.build-id }}
    steps:
      - name: Set build ID
        id: set-build-id
        run: echo "build-id=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        run: |
          docker --version

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/docker-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile*') }}

      - name: Build and tag FastAPI image
        run: |
          docker build \
            --cache-from=type=local,src=/tmp/docker-cache \
            --tag crypto_fastapi:${{ steps.set-build-id.outputs.build-id }} \
            --file src/api_user/docker/Dockerfile.fastapi \
            --progress=plain \
            .

      - name: Build and tag Dash image
        run: |
          docker build \
            --cache-from=type=local,src=/tmp/docker-cache \
            --tag crypto_dash:${{ steps.set-build-id.outputs.build-id }} \
            --file src/api_user/docker/Dockerfile.dash \
            --progress=plain \
            .

      - name: Build and tag Data Collector image
        run: |
          docker build \
            --cache-from=type=local,src=/tmp/docker-cache \
            --tag crypto_data_collector:${{ steps.set-build-id.outputs.build-id }} \
            --file src/collection_admin/docker/Dockerfile.data_collector \
            --progress=plain \
            .
