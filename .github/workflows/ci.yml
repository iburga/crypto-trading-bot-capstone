name: CI - Feature Branch Workflow

on:
  push:
    branches-ignore:
      - 'master'   # run this workflow on all other branches

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8

    - name: Run linter
      run: |
        flake8 src tests

  test:
    runs-on: ubuntu-latest
    # needs: lint  # Only run if lint succeeds
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install pytest

      - name: Run tests
        run: |
          pytest tests/
  
  build:
    runs-on: ubuntu-latest
    # needs: [lint, test]  # Only run if both pass

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        run: |
          docker --version
          docker buildx version
          docker buildx create --use

      - name: Set up Docker Buildx with GitHub cache
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker
          driver-opts: network=host

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build FastAPI image with cache
        run: |
          docker build \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
            -t my-app-fastapi:ci-build \
            -f src/api_user/docker/Dockerfile.fastapi .
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Build Dash image with cache
        run: |
          docker build \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
            -t my-app-dash:ci-build \
            -f src/api_user/docker/Dockerfile.dash .
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Build Data Collector image with cache
        run: |
          docker build \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
            -t data-collector:ci-build \
            -f src/collection_admin/docker/Dockerfile.data_collector .
          rm -rf /tmp/.buildx-cache