name: Release Workflow

on:
  workflow_run:
    workflows: ["Build Workflow"]
    types:
      - completed
  workflow_dispatch:  # Allow manual triggering

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Get build ID
        uses: actions/github-script@v6
        id: set-build-id
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.payload.workflow_run.id,
            });
            const match = artifacts.data.artifacts.find((art) => art.name === 'build-artifacts');
            const download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: match.id,
              archive_format: 'zip',
            });
            return download.data.toString('base64');
          result-encoding: string

      - name: Extract build ID
        run: |
          echo "${{ steps.set-build-id.outputs.result }}" > artifact.zip
          unzip artifact.zip
          BUILD_ID=$(cat build_id.txt)
          echo "BUILD_ID=${BUILD_ID}" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        run: docker --version

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Tag and Push Images
        run: |
          # Pull, tag, and push each image
          for image in fastapi dash data_collector; do
            docker pull crypto_${image}:${{ env.BUILD_ID }}
            docker tag crypto_${image}:${{ env.BUILD_ID }} ${{ secrets.DOCKERHUB_USERNAME }}/crypto_${image}:latest
            docker tag crypto_${image}:${{ env.BUILD_ID }} ${{ secrets.DOCKERHUB_USERNAME }}/crypto_${image}:${{ github.sha }}
            docker push --all-tags ${{ secrets.DOCKERHUB_USERNAME }}/crypto_${image}
          done
