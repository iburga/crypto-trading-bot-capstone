services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: crypto_zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - crypto_net

  kafka:
    image: bitnami/kafka:3.7
    container_name: crypto_kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - crypto_net
      
  mongodb:
    image: mongo:7.0
    container_name: crypto_mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - crypto_net

  jupyter:
    build: 
      context: .
      dockerfile: ./Dockerfile.jupyter
    container_name: crypto_pyspark
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - SPARK_HOME=/opt/spark
      - PYSPARK_PYTHON=python3
    volumes:
      - ./notebooks:/home/jovyan/notebooks
      - ./src:/home/jovyan/src
      - ./requirements.txt:/tmp/requirements.txt
      - ./.env:/home/jovyan/.env
    command: >
      bash -c "
      pip install -r /tmp/requirements.txt &&
      start-notebook.sh
      "
    networks:
      - crypto_net

  dash:
    build:
      context: .
      dockerfile: Dockerfile.dash
    container_name: crypto_dash
    ports:
      - "8050:8050"
    environment:
      - MONGO_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@crypto_mongo:27017/
    depends_on:
      - mongodb

volumes:
  mongo_data:

networks:
  crypto_net:
    name: crypto_network